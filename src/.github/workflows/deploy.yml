name: CI/CD

on:
  push:
    branches: [ main ]  # change if your default branch is different
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/al3dwii/agenticbe:latest
            ghcr.io/al3dwii/agenticbe:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      # Copy compose + Caddyfile to the VM
      - name: Upload deployment files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "docker-compose.prod.yml,Caddyfile"
          target: "/opt/agentic"

      # Connect to VM, login to ghcr if needed, pull new image and restart
      - name: Deploy on VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            cd /opt/agentic

            # (Optional) login to ghcr if your package is private
            if [ -n "${{ secrets.GHCR_READ_TOKEN }}" ]; then
              echo "${{ secrets.GHCR_READ_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_READ_USER }} --password-stdin
            fi

            export IMAGE_TAG=${{ github.sha }}
            # Ensure .env exists (created manually earlier)
            [ -f .env ] || (echo ".env missing in /opt/agentic"; exit 1)

            docker compose --env-file .env -f docker-compose.prod.yml pull
            docker compose --env-file .env -f docker-compose.prod.yml up -d

            # clean dangling
            docker image prune -af --filter label=stage=builder || true
